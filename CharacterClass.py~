import pygame, sys, os, math
from pygame.locals import *

class Character:
	def load_image(self, image_name):
		try:
			image = pygame.image.load(image_name)
		except pygame.error, message:
			print "Cannot load image: " + image_name
			raise SystemExit, message
		return image.convert_alpha(

	def __init__(self, screen, img_filename, init_x, init_y):
		pygame.sprite.Sprite.__init__(self) 
		self.screen = screen

		self.image = self.load_image(img_filename)

		self.image_w, self.image_h = self.image.get_size()

		self.x = init_x
		self.y = init_y
		self.hspeed = 0

	def run(self,direction)
		if abs(self.hspeed) <= 3:
			self.hspeed += .5*direction
		
	def decelerate(self)
		if abs(self.hspeed) > .5:
			self.hspeed /= 2
		else
			self.hspeed = 0
	def update(self):
		keystate = pygame.key.get_pressed()

		if keystate[K_LEFT]:
    			run(-1)
		if keystate[K_RIGHT]:
			run(1)

		self.x += hspeed
	
	def draw(self):
		draw_pos = self.image.get_rect().move(self.x - self.image_w / 2, self.y - self.image_h / 2)
		self.screen.blit(self.image, draw_pos)

if __name__ == "__main__":
	pygame.init()
	SCREEN_WIDTH = 800
	SCREEN_HEIGHT = 600
	screenDimensions = (SCREEN_WIDTH,SCREEN_HEIGHT)
	window = pygame.display.set_mode(screenDimensions)
	pygame.display.set_caption('Laser Test')
	screen = pygame.display.get_surface()

	FPS = 50
	BACKGROUND_COLOR = (100,100,100)
	barbara = Character(screen,'barbrunning.gif',SCREEN_WIDTH/2,SCREEN_HEIGHT/2)
	while True:
		screen.fill(BACKGROUND_COLOR)
		
		for event in pygame.event.get():
			if event.type == pygame.QUIT:
				pygame.quit()
				sys.exit()
			elif event.type == pygame.KEYDOWN:
				if event.key == K_ESCAPE:
					pygame.quit()
					sys.exit()
			
		barbara.update()
		
		barbara.draw()	

		pygame.display.flip()


